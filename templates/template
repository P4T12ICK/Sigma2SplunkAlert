{% for uc in uc_list %}
# Generated with Sigma2SplunkAlert
[{{ uc.title }}]
{% if uc.action_email==1 %}action.email = 1
{% if uc.email.result_link==1 %}action.email.include.results_link = {{ uc.email.result_link }}
{% endif %}
{% if uc.email.view_link==1 %}action.email.include.view_link = {{ uc.email.view_link }}
{% endif %}
{% if uc.email.include_search==1 %}action.email.include.search = {{ uc.email.include_search }}
{% endif %}
{% if uc.email.include_trigger==1 %}action.email.include.trigger = {{ uc.email.include_trigger }}
{% endif %}
{% if uc.email.include_trigger_time==1 %}action.email.include.trigger_time = {{ uc.email.include_trigger_time }}
{% endif %}
{% if uc.email.inline==1 %}action.email.inline = {{ uc.email.inline }}
{% endif %}
{% if uc.email.sendcsv==1 %}action.email.sendcsv = {{ uc.email.sendcsv }}
{% endif %}
{% if uc.email.sendpdf==1 %}action.email.sendpdf = {{ uc.email.sendpdf }}
{% endif %}
{% if uc.email.sendresults==1 %}action.email.sendresults = {{ uc.email.sendresults }}
{% endif %}
action.email.subject.alert = {{ uc.email.subject }}
action.email.to = {{ uc.email.to }}
action.email.message.alert = {{ uc.email.message | replace("%title%",uc.title) | replace("%status%",uc.status) | replace("%description%",uc.description) | replace("%references%",uc.references) | replace("%tags%",uc.tags) | replace("%author%",uc.author) | replace("%date%",uc.date) | replace("%falsepositives%",uc.falsepositives) | replace("%level%",uc.level) | replace("%mitre%",uc.mitreBlock) | replace("%fields%",uc.email.field_block) | replace("|","\\\n") }}
action.email.useNSSubject = 1
{% endif %}
{% if uc.action_alert_manager==1 %}action.alert_manager = 1
{% if uc.alert_manager.title is defined %}action.alert_manager.param.title = {{ uc.alert_manager.title }}
{% endif %}
{% if uc.alert_manager.auto_assign_owner is defined %}action.alert_manager.param.auto_assign_owner = {{ uc.alert_manager.auto_assign_owner }}
{% endif %}
action.alert_manager.param.auto_previous_resolve = {{ uc.alert_manager.auto_previous_resolve }}
action.alert_manager.param.auto_subsequent_resolve = {{ uc.alert_manager.auto_subsequent_resolve }}
action.alert_manager.param.auto_suppress_resolve = {{ uc.alert_manager.auto_suppress_resolve }}
action.alert_manager.param.auto_ttl_resove = {{ uc.alert_manager.auto_ttl_resove }}
{% if uc.alert_manager.display_fields is defined %}action.alert_manager.param.display_fields = {{ uc.alert_manager.display_fields }}
{% endif %}
{% if uc.alert_manager.urgency is defined %}action.alert_manager.param.urgency = {{ uc.alert_manager.urgency }}
{% endif %}
{% if uc.alert_manager.impact is defined %}action.alert_manager.param.impact = {{ uc.alert_manager.impact }}
{% endif %}
{% if uc.alert_manager.category is defined %}action.alert_manager.param.category = {{ uc.alert_manager.category }}
{% endif %}
{% if uc.alert_manager.subcategory is defined %}action.alert_manager.param.subcategory = {{ uc.alert_manager.subcategory }}
{% endif %}
{% if uc.alert_manager.tags is defined %}action.alert_manager.param.tags = {{ uc.alert_manager.tags }}
{% endif %}
{% if uc.alert_manager.notification_scheme is defined %}action.alert_manager.param.notification_scheme = {{ uc.alert_manager.notification_scheme }}
{% endif %}
{% endif %}
alert.severity = 1
alert.suppress = 0
alert.track = 1
alert.expires = 24h
counttype = number of events
cron_schedule = {{ uc.cron_schedule }}
{% if uc.allow_skew is defined %}allow_skew = {{ uc.allow_skew}}
{% endif %}
{% if uc.schedule_window is defined %}schedule_window = {{ uc.schedule_window}}
{% endif %}
description = {{ uc.description }}
dispatch.earliest_time = {{ uc.earliest_time }}
dispatch.latest_time = {{ uc.latest_time }}
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = {{ uc.app }}
request.ui_dispatch_view = search
search = {{ uc.splunk_search }}

{% endfor %}
